<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBlockMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_blend = c_white // debug

//xprevious = x
//yprevious = y
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var dX = x-xprevious
var dY = y-yprevious

// If the player and this block collide after movement:

// Return the player and this block to their pre-moved positions.
x = xprevious
y = yprevious
with other {
    x = xprevious
    y = yprevious
}

// Move the block by its hspeed and vspeed, pushing the player if in the way.
// This is done first so that the player may then move right up against the block.
if dX != 0 {
    x += dX
    if place_meeting(x, y, other) and not place_meeting(x-dX, y, other) {
        if dX &gt; 0 {
            other.x += (bbox_right+1) - other.bbox_left
            other.xprevious = other.x

        } else {
            other.x += bbox_left - (other.bbox_right+1)
            other.xprevious = other.x
        }
        
        other.pushedX = true
        image_blend = c_lime
    }
}

if dY != 0 {
    y += dY
    if place_meeting(x, y, other) and not place_meeting(x, y-dY, other) {
        if dY &gt; 0 {
            other.y += (bbox_bottom+1) - other.bbox_top
            other.yprevious = other.y

        } else {
            other.y += bbox_top - (other.bbox_bottom+1)
            other.yprevious = other.y
        }
        
        other.pushedY = true
        image_blend = c_lime
    }
}

// Move the player by its hspeed and vspeed.
with other {
    if place_meeting(x+hspeed, y, objBlock) {
        scrMoveContactObject(hspeed, 0, objBlock)
        hspeed = 0
    }
    
    if place_meeting(x, y+vspeed, objBlock) {
        if (global.grav == 1 and vspeed &gt; 0) or (global.grav == -1 and vspeed &lt; 0) {
            djump = true
        }
        scrMoveContactObject(0, vspeed, objBlock)
        vspeed = 0
    }
    
    // todo: is this necessary?
    //if place_meeting(x+hspeed, y+vspeed, objBlock) {
    //    hspeed = 0
    //}
    
    x += hspeed
    y += vspeed
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
