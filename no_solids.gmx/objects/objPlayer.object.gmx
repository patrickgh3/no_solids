<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// Movement
xSpeed = 0
ySpeed = 0

djump = true
frozen = false

// Only one block per step is allowed to carry the player horizontally on top of a block.
// (e.g. there's a block moving at speed 3 and another one at speed 6 - the player should never move at speed 9)
carriedXOnTop = false


// Animation
xScale = 1

animOnVine = false


// Constants
yGravity = 0.4

jump = 8.5
jump2 = 7
jumpReleaseFactor = 0.45

maxXSpeed = 3
maxYSpeed = 9

vineJumpXSpeed = 15
vineJumpYSpeed = 9
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if place_meeting(x, y, objPlayerKiller) {
    scrKillPlayer()
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var leftDown = scrButtonCheck(global.leftButton)
var leftPressed = scrButtonCheckPressed(global.leftButton)

var rightDown = scrButtonCheck(global.rightButton)
var rightPressed = scrButtonCheckPressed(global.rightButton)

var jumpDown = scrButtonCheck(global.jumpButton)
var jumpPressed = scrButtonCheckPressed(global.jumpButton)
var jumpReleased = scrButtonCheckReleased(global.jumpButton)


var onVineL = place_meeting(x - 1, y, objVineL)
var onVineR = place_meeting(x + 1, y, objVineR)


xSpeed = 0

if not frozen {
    if rightDown {
        xSpeed = maxXSpeed
        xScale = 1
    }
    else if leftDown {
        xSpeed = -maxXSpeed
        xScale = -1
    }
    
    
    if jumpPressed {
        // Single jump
        if place_meeting(x, y + global.grav, objBlock)
                or place_meeting(x, y, objPlatform) // Allow "platform jumping"
                or scrWouldPressOneWayWall(0, global.grav) != noone {
            ySpeed = -jump * global.grav
            djump = true
        }

        // Double jump
        else if djump {
            ySpeed = -jump2 * global.grav
            djump = false
        }
    }
    
    // Release jump
    // Note that jumping and releasing jump on the same frame is a jump cancel
    if jumpReleased and ySpeed * global.grav &lt; 0 {
        ySpeed *= jumpReleaseFactor
    }
}


if global.grav == 1 and ySpeed &gt; maxYSpeed {
    ySpeed = maxYSpeed
}
else if global.grav == -1 and ySpeed &lt; -maxYSpeed {
    ySpeed = -maxYSpeed
}


animOnVine = false


if onVineL or onVineR {
    animOnVine = true
    if onVineR xScale = -1
    else xScale = 1
    
    xSpeed = 0
    //ySpeed = 2 * global.grav
    ySpeed = -yGravity * global.grav
    
    if not frozen and ((onVineL and rightPressed) or (onVineR and leftPressed)) {
        // Vine jump
        if jumpDown {
            if onVineR xSpeed = -vineJumpXSpeed
            else xSpeed = vineJumpXSpeed
            
            ySpeed = -vineJumpYSpeed * global.grav
            
            animOnVine = false
        }
        // Fall off the vine
        else {
            if onVineR xSpeed = -maxXSpeed
            else xSpeed = maxXSpeed
            
            animOnVine = false
        }
    }
}

// [End of standard engine player step event]


ySpeed += yGravity * global.grav


// This section is adapted from the standard engine's objPlayer collision with objBlock event
if scrMoveContactBlocksUndoIfNoPress(xSpeed, 0) {
    xSpeed = 0
}

if scrMoveContactBlocksUndoIfNoPress(0, ySpeed) {
    if (global.grav == 1 and ySpeed &gt; 0) or (global.grav == -1 and ySpeed &lt; 0) {
        djump = true
    }
    
    ySpeed = 0
}

if scrMoveContactBlocksWouldPress(xSpeed, ySpeed) {
    xSpeed = 0
}

x += xSpeed
y += ySpeed


// If we just jumped up through a one-way wall, snap to standing on top of it
if ySpeed * global.grav &lt; 0 {
    var jumpedThrough = scrWouldPressOneWayWall(0, -ySpeed)
    
    if jumpedThrough != noone {
        if global.grav == 1 {
            y = jumpedThrough.bbox_top - ceil(sprite_height / 2)
        } else {
            y = jumpedThrough.bbox_bottom + ceil(sprite_height / 2)
        }
        
        ySpeed = 0
    }
}


carriedXOnTop = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var drawX = x
var drawY = y

// (Copied from Yoyo engine) We need to offset player by 1 pixel with reverse gravity for some reason.
if global.grav == -1 {
    drawY++
}

// I guess we need to do it horizontally too? Maybe?
if xScale == -1 {
    drawX++
}

draw_sprite_ext(mask_index, image_index, drawX, drawY, xScale, global.grav, 0, image_blend, image_alpha)
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
